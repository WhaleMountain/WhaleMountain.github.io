<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2025-04 on Whale Mountain</title><link>https://whalem.net/tags/2025-04/</link><description>Recent content in 2025-04 on Whale Mountain</description><generator>Hugo</generator><language>jp</language><copyright>© 2021 Whale Mountain. Theme yuki. Powered by Hugo.</copyright><lastBuildDate>Tue, 06 May 2025 13:03:55 +0900</lastBuildDate><atom:link href="https://whalem.net/tags/2025-04/index.xml" rel="self" type="application/rss+xml"/><item><title>VS Codeのキーバインド</title><link>https://whalem.net/post/2025-04/vscode-keybind/</link><pubDate>Tue, 29 Apr 2025 14:20:57 +0900</pubDate><guid>https://whalem.net/post/2025-04/vscode-keybind/</guid><description>&lt;p>WindowsのVS Codeを利用するにあたりMacのターミナルみたいな動きをしたくなったので、Claude君にキーバインドを作成してもらった。&lt;/p>
&lt;h3 id="キーバインド設定">キーバインド設定&lt;/h3>
&lt;p>&lt;code>Ctrl+K Ctrl+S&lt;/code>でキーボードショートカットを開き、右上の「キーボードショートカット(JSON)」を押して &lt;code>keybindings.json&lt;/code> を開きます。&lt;br>
後は下のJsonを貼り付けると以下のような設定になります。&lt;/p>
&lt;ul>
&lt;li>Ctrl+E
&lt;ul>
&lt;li>カーソルを行末に移動&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Ctrl+A
&lt;ul>
&lt;li>カーソルを行頭に移動する&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Ctrl+K
&lt;ul>
&lt;li>カーソルの位置から行末までのテキストをすべて削除する&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Ctrl+F
&lt;ul>
&lt;li>カーソルを右に1文字移動する&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Ctrl+B
&lt;ul>
&lt;li>カーソルを左に1文字移動する&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Alt+Z
&lt;ul>
&lt;li>操作を元に戻す&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Shift+Alt+Z
&lt;ul>
&lt;li>元に戻した操作をやり直す&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Alt+A
&lt;ul>
&lt;li>エディタ内のテキストをすべて選択する&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Alt+F
&lt;ul>
&lt;li>検索機能を開く&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-json">[
 {
 &amp;quot;key&amp;quot;: &amp;quot;ctrl+e&amp;quot;,
 &amp;quot;command&amp;quot;: &amp;quot;cursorEnd&amp;quot;,
 &amp;quot;when&amp;quot;: &amp;quot;editorTextFocus&amp;quot;
 },
 {
 &amp;quot;key&amp;quot;: &amp;quot;ctrl+a&amp;quot;,
 &amp;quot;command&amp;quot;: &amp;quot;cursorHome&amp;quot;,
 &amp;quot;when&amp;quot;: &amp;quot;editorTextFocus&amp;quot;
 },
 {
 &amp;quot;key&amp;quot;: &amp;quot;ctrl+k&amp;quot;,
 &amp;quot;command&amp;quot;: &amp;quot;deleteAllRight&amp;quot;,
 &amp;quot;when&amp;quot;: &amp;quot;editorTextFocus&amp;quot;
 },
 {
 &amp;quot;key&amp;quot;: &amp;quot;alt+z&amp;quot;,
 &amp;quot;command&amp;quot;: &amp;quot;undo&amp;quot;,
 &amp;quot;when&amp;quot;: &amp;quot;editorTextFocus&amp;quot;
 },
 {
 &amp;quot;key&amp;quot;: &amp;quot;shift+alt+z&amp;quot;,
 &amp;quot;command&amp;quot;: &amp;quot;redo&amp;quot;,
 &amp;quot;when&amp;quot;: &amp;quot;editorTextFocus&amp;quot;
 },
 {
 &amp;quot;key&amp;quot;: &amp;quot;ctrl+f&amp;quot;,
 &amp;quot;command&amp;quot;: &amp;quot;cursorRight&amp;quot;,
 &amp;quot;when&amp;quot;: &amp;quot;editorTextFocus&amp;quot;
 },
 {
 &amp;quot;key&amp;quot;: &amp;quot;ctrl+b&amp;quot;,
 &amp;quot;command&amp;quot;: &amp;quot;cursorLeft&amp;quot;,
 &amp;quot;when&amp;quot;: &amp;quot;editorTextFocus&amp;quot;
 },
 {
 &amp;quot;key&amp;quot;: &amp;quot;alt+a&amp;quot;,
 &amp;quot;command&amp;quot;: &amp;quot;editor.action.selectAll&amp;quot;,
 &amp;quot;when&amp;quot;: &amp;quot;editorTextFocus&amp;quot;
 },
 {
 &amp;quot;key&amp;quot;: &amp;quot;alt+f&amp;quot;,
 &amp;quot;command&amp;quot;: &amp;quot;actions.find&amp;quot;,
 &amp;quot;when&amp;quot;: &amp;quot;editorFocus || editorIsOpen&amp;quot;
 }
]
&lt;/code>&lt;/pre>
&lt;p>とりあえず、もともと&lt;code>Ctrl&lt;/code>にあったものは&lt;code>Alt&lt;/code>に割り当てる。ほかに不都合があれば&lt;code>when&lt;/code>あたりを調整する&lt;/p></description></item><item><title>Lemonade Serverの導入</title><link>https://whalem.net/post/2025-04/lemonade-server/</link><pubDate>Sun, 20 Apr 2025 19:50:50 +0900</pubDate><guid>https://whalem.net/post/2025-04/lemonade-server/</guid><description>&lt;p>新しく購入した PC の CPU である AMD Ryzen AI 9 HX 370 には NPU を使用するために &lt;a href="https://github.com/onnx/turnkeyml">Lemonade Server&lt;/a> を導入した時のメモです。&lt;/p>
&lt;h2 id="lemonade-server">Lemonade Server&lt;/h2>
&lt;p>最近 AMD から &lt;a href="https://github.com/amd/gaia">GAIA&lt;/a> という OSS で AMD Ryzen AI プロセッサの NPU を利用して生成 AI を動かせそうでした。&lt;br>
その GAIA のバックエンドの Lemonade を導入することで VS Code の拡張機能からも利用できるとのことなので、Lemonade Server をインストールします。&lt;/p>
&lt;h3 id="インストール">インストール&lt;/h3>
&lt;p>GitHub の Releases からインストーラーをダウンロードしてインストールするだけです。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/onnx/turnkeyml/releases">https://github.com/onnx/turnkeyml/releases&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>インストール時にダウンロードするモデルも選択できました。NPU に対応した Hybrid のモデルがダウンロードできます。&lt;br>
現在用意されているモデルは Huggingface で確認できます。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://huggingface.co/amd">https://huggingface.co/amd&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="起動">起動&lt;/h3>
&lt;p>デスクトップに作成される lemonade-server をクリックするだけです。 &lt;code>8000&lt;/code>ポートで立ち上がります。
ダウンロードしたモデル一覧は下記にアクセスすると取得できました。&lt;/p>
&lt;ul>
&lt;li>http://localhost:8000/api/v0/models&lt;/li>
&lt;/ul>
&lt;p>&lt;del>追加でモデルダウンロードしたい時はどこからだろう&amp;hellip;？&lt;/del>&lt;/p>
&lt;h3 id="モデルの追加">モデルの追加&lt;/h3>
&lt;p>lemonade-server をインストール後に &lt;code>~/AppData/Local/lemonade_server/bin&lt;/code> に &lt;code>lemonade-server.bat&lt;/code> が追加されています。&lt;/p></description></item><item><title>新しいPCのセットアップ</title><link>https://whalem.net/post/2025-04/pc-setup/</link><pubDate>Sun, 06 Apr 2025 15:11:36 +0900</pubDate><guid>https://whalem.net/post/2025-04/pc-setup/</guid><description>&lt;p>新しくWindows PCを購入したので環境構築でやったことを軽くメモする。&lt;/p>
&lt;ul>
&lt;li>使用環境
&lt;ul>
&lt;li>Vivobook S14 M5406WA&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>全て載せるのは面倒なので忘れやすそうなもののみ雑にまとめる。&lt;/p>
&lt;h1 id="デバイス関連">デバイス関連&lt;/h1>
&lt;h3 id="jisus配列の設定">JIS/US配列の設定&lt;/h3>
&lt;p>ノートPCのキーボードはJIS配列、Bluetoothで繋ぐ外付けキーボードはUS配列なのでそのまま使うとJIS配列になる。&lt;br>
下記サイトを参考に設定する。感謝!!&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://zenn.dev/kakuhito/articles/d27128d0b62098">外付けUSキーボードと内蔵JISキーボードを共存させたい(Win10/11)&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Windowsの設定を開き &lt;code>時刻と言語 &amp;gt; 言語と地域 &amp;gt; 日本語の(・・・)メニュー &amp;gt; 言語のオプション &amp;gt; キーボード &amp;gt; レイアウトを変更する &amp;gt; 接続済みキーボード レイアウトを使用する &amp;gt; OK&lt;/code> を押す。&lt;/p>
&lt;p>(本当はこれだけで設定できたら嬉しい)&lt;br>
このままでは内臓キーボードもUS配列で認識されるので、サイトを参考に &lt;code>.reg&lt;/code> ファイルを作成してレジストリに値を追加する。&lt;br>
インスタンスパスはデバイスマネージャーの「標準 PS/2 キーボード」で問題なく設定できました。&lt;/p>
&lt;h3 id="ctrl2cap">Ctrl2Cap&lt;/h3>
&lt;p>&lt;em>&lt;strong>これが一番重要!!かも&lt;/strong>&lt;/em>&lt;/p>
&lt;p>MicrosoftのページからCtrl2Cap v3.0をダウンロードする。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/ja-jp/sysinternals/downloads/ctrl2cap">Ctrl2Cap v3.0&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>ダウンロードしたzipファイルを展開して、Windows Terminalを管理者モードで開く。&lt;br>
PowerShellで展開したフォルダの場所まで移動して、インストールコマンドを叩いたらPCを再起動する。&lt;/p>
&lt;pre>&lt;code class="language-shell">.\ctrl2cap.exe /install
&lt;/code>&lt;/pre>
&lt;p>平穏が訪れる。&lt;/p>
&lt;hr>
&lt;h1 id="ソフトウェア関連">ソフトウェア関連&lt;/h1>
&lt;h3 id="wsl2の導入">WSL2の導入&lt;/h3>
&lt;p>Microsoftのページに従ってPowerShellからインストール。デフォルトでUbuntu24.04がインストールされました。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/ja-jp/windows/wsl/install">WSL を使用して Windows に Linux をインストールする方法&lt;/a>&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-shell">wsl --install
&lt;/code>&lt;/pre>
&lt;h3 id="rancher-desktop-docker-desktop">&lt;del>Rancher Desktop&lt;/del> Docker Desktop&lt;/h3>
&lt;p>Docker Desktopでもいいが、&lt;del>使ったことがなかったのでRancher Desktopを導入しました。&lt;/del>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.rancherdesktop.io/getting-started/installation/#installing-rancher-desktop-on-windows">Installing Rancher Desktop on Windows&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>公式サイトに従ってインストール後、起動し &lt;code>Preferences &amp;gt; WSL &amp;gt; Ubuntu&lt;/code> にチェックを入れ &lt;code>Apply&lt;/code> で反映する。&lt;br>
&lt;del>あとはWSL2のUbuntuから&lt;code>docker&lt;/code>コマンドを使用できる。特に設定もなく&lt;code>docker compose&lt;/code>も利用でき、今のところ不便はなさそう。&lt;/del>&lt;/p></description></item></channel></rss>