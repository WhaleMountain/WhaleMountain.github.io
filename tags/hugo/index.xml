<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugo on Whale Mountain</title><link>https://whalem.net/tags/hugo/</link><description>Recent content in Hugo on Whale Mountain</description><generator>Hugo</generator><language>jp</language><copyright>© 2021 Whale Mountain. Theme yuki. Powered by Hugo.</copyright><lastBuildDate>Mon, 12 Aug 2024 19:38:41 +0900</lastBuildDate><atom:link href="https://whalem.net/tags/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>Highlight.jsのアップデート</title><link>https://whalem.net/post/2024-08/update-highlightjs/</link><pubDate>Mon, 12 Aug 2024 19:38:41 +0900</pubDate><guid>https://whalem.net/post/2024-08/update-highlightjs/</guid><description>&lt;p>下記コミットの内容についての記事です。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/WhaleMountain/whalem/commit/915fa2653faf452a911f054bc17ed8cbd372cdff">update submodule and config.toml&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/WhaleMountain/hugo-theme-yuki/commit/e00767e95db6532b5cb5892f8627795c694c582d">update highlightjs&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="リンクの変更">リンクの変更&lt;/h3>
&lt;p>テーマで使用されていた &lt;a href="https://highlightjs.org/">Highlight.js&lt;/a> のバージョンが &lt;code>v9.13.1&lt;/code> でした。&lt;br>
脆弱性の報告もあるのでバージョンを上げようと思いました。&lt;/p>
&lt;ul>
&lt;li>参考: &lt;a href="https://security.snyk.io/package/npm/highlight.js/9.13.1">highlight.js@9.13.1 vulnerabilities&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>公式サイトからJSファイルをダウンロードしてファイルを更新してもいいけど、バージョンアップがしやすいようにCDNを利用します。&lt;/p>
&lt;pre>&lt;code class="language-diff">- &amp;lt;script src=&amp;quot;{{ &amp;quot;js/highlight.min.js&amp;quot; | absURL }}&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
+ &amp;lt;script src=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.10.0/highlight.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>あとは &lt;code>initHighlightingOnLoad&lt;/code> が非推奨になっているので、ドキュメント通りに変更する。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://highlightjs.readthedocs.io/en/latest/api.html?highlight=initHighlightingOnLoad#inithighlightingonload">Deprecated API&lt;/a>&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-diff">- &amp;lt;script&amp;gt;hljs.initHighlightingOnLoad();&amp;lt;/script&amp;gt;
+ &amp;lt;script&amp;gt;hljs.highlightAll();&amp;lt;/script&amp;gt;
&lt;/code>&lt;/pre>
&lt;h3 id="エラーの修正">エラーの修正&lt;/h3>
&lt;p>これで終わりかなと思ったらコンソールに下記 Warning が。。&lt;/p>
&lt;pre>&lt;code class="language-console">One of your code blocks includes unescaped HTML. This is a potentially serious security risk.
https://github.com/highlightjs/highlight.js/wiki/security
The element with unescaped HTML:
...
&lt;/code>&lt;/pre>
&lt;p>調べてたら強調されているコードを再強調すると Warning が表示されるらしい。&lt;/p>
&lt;ul>
&lt;li>参考: &lt;a href="https://github.com/highlightjs/highlight.js/issues/3761">Repeated highlighting of already highlighted code causes &amp;ldquo;&lt;em>One of your code blocks includes unescaped HTML. This is a potentially serious security risk.&lt;/em>&amp;rdquo;&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>実際にコンソールで &lt;code>hljs.highlightAll();&lt;/code> を叩いてみるとページ表示時と同じ箇所で Warning が表示されました。&lt;br>
色々試して Highlight.js の読み込みを削除してもシンタックスハイライトが適用されていました。
Hugo のドキュメントを見てみると Hugo 側で &lt;a href="https://gohugo.io/content-management/syntax-highlighting/#highlight-shortcode">Syntax highlighting&lt;/a> 機能を持っているようでした。&lt;/p></description></item><item><title>ページネーションの修正</title><link>https://whalem.net/post/2024-08/fix-theme-pagination/</link><pubDate>Thu, 01 Aug 2024 21:48:27 +0900</pubDate><guid>https://whalem.net/post/2024-08/fix-theme-pagination/</guid><description>&lt;p>下記コミットの内容についての記事です。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/WhaleMountain/hugo-theme-yuki/commit/a68896df01a2e32293fe6b0396c81d442667b084">fix pagination&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="tags画面の修正">tags画面の修正&lt;/h2>
&lt;p>&lt;a href="https://whalem.net/tags/">Tags&lt;/a> ページを見ていたらテーマを確認したところページネーションがうまくいっていないことを確認。&lt;br>
下記の記述になっていました。&lt;/p>
&lt;ul>
&lt;li>layouts/_default/single.html&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-html">{{ range .Pages }}
 &amp;lt;div class=&amp;quot;index-posts__list&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;l-time&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;{{.Permalink}}&amp;quot;&amp;gt;{{ .Date.Format &amp;quot;2006.01.02 15:04&amp;quot; }}&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;l-title&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;{{.Permalink}}&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
{{ end }}

&amp;lt;div class=&amp;quot;index-paginate&amp;quot;&amp;gt;
 {{ partial &amp;quot;pagination.html&amp;quot; . }}
&amp;lt;/div&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>単純に &lt;a href="https://gohugo.io/templates/pagination/">Pagination&lt;/a> が使われていないのを確認、使うように修正。&lt;/p>
&lt;pre>&lt;code class="language-diff">- {{ range .Pages }}
+ {{ range .Paginator.Pages }}
&lt;/code>&lt;/pre>
&lt;h2 id="ページネーションの修正">ページネーションの修正&lt;/h2>
&lt;p>他におかしいところないかと大量に記事を追加して確認するとエラーが。。&lt;/p>
&lt;pre>&lt;code class="language-shell">pagination.html:106:28&amp;quot;: execute of template failed at &amp;lt;$pag.Last.Permalink&amp;gt;: can’t evaluate field Permalink in type *page.Pager
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://gohugo.io/templates/pagination/">Pagination&lt;/a> のドキュメントを眺めると &lt;code>.Last&lt;/code> はあるけど &lt;code>.Last.Permalink&lt;/code> については書かれていない。&lt;br>
よく見るとドキュメントに&lt;a href="https://gohugo.io/methods/pager/last/">正しい書き方&lt;/a>があるのでそれに修正する。&lt;/p></description></item><item><title>記事に更新時間の追加</title><link>https://whalem.net/post/2024-07/hugo-lastmod/</link><pubDate>Tue, 30 Jul 2024 22:12:49 +0900</pubDate><guid>https://whalem.net/post/2024-07/hugo-lastmod/</guid><description>&lt;p>個人的にブログの公開日と更新日があるとありがたい。なので Hugo のテーマをいじって更新日を表示する。&lt;/p>
&lt;h2 id="テンプレートの修正">テンプレートの修正&lt;/h2>
&lt;p>とりあえず公式サイトを調べると &lt;a href="https://gohugo.io/methods/page/lastmod/">Lastmod&lt;/a> が使えそう。&lt;/p>
&lt;p>Hugo テーマのテンプレートを操作して &lt;code>Edited on&lt;/code> を追加する。&lt;/p>
&lt;pre>&lt;code class="language-html">{{ if ne .Date .Lastmod }}
 Edited on &amp;amp;ensp;&amp;amp;ensp;&amp;amp;ensp;&amp;amp;ensp;{{ .Lastmod.Format &amp;quot;2006.01.02 15:04&amp;quot; }}
{{ end }}
&lt;/code>&lt;/pre>
&lt;p>とりあえず設定されている &lt;code>Date&lt;/code> と更新時間が違うなら表示する。あと無理やり &lt;code>&amp;amp;ensp;&lt;/code> で幅を調整。&lt;br>
表示形式は &lt;a href="https://gohugo.io/methods/time/format/">Format&lt;/a> を参考にする。&lt;/p>
&lt;h2 id="補足">補足&lt;/h2>
&lt;p>GitHub Actions でビルドして Lastmod を取得すると GitHub にプッシュした時間が取得されるので(多分)、必ず更新時間が表示されます。。。&lt;/p></description></item><item><title>久しぶりに更新</title><link>https://whalem.net/post/2024-07/long-time-no-see/</link><pubDate>Sun, 28 Jul 2024 16:55:43 +0900</pubDate><guid>https://whalem.net/post/2024-07/long-time-no-see/</guid><description>&lt;h2 id="久しぶりに更新">久しぶりに更新&lt;/h2>
&lt;p>全然運用していなかったので、ブログを更新できるか確認していた。&lt;br>
とりあえずやったことのメモ。&lt;/p>
&lt;h2 id="hugoの確認">Hugoの確認&lt;/h2>
&lt;p>GitHub Pages に移行したときの Hugo のバージョンは &lt;code>0.83.0&lt;/code> だったけど、今は &lt;code>0.129.0&lt;/code> になってた。&lt;br>
とりあえずビルドできるか確認したら、エラーが。。&lt;/p>
&lt;pre>&lt;code class="language-shell"> parse failed: template: _default/list.html:4: function &amp;quot;sanitizeurl&amp;quot; not defined
&lt;/code>&lt;/pre>
&lt;p>sanitizeurl がないとのことで代わりのもの探したけどぱっと見見つけられないので、一旦削除で対応 (そんなんでいいのか)&lt;br>
baseUrl のシリアライズなので多分問題ないと思いたい。&lt;/p>
&lt;h2 id="github-actionsの更新">GitHub Actionsの更新&lt;/h2>
&lt;p>Yaml ファイルの中身を忘れているけど、まぁ使っているものは色々バージョンは上げとく。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/actions/checkout">actions/checkout&lt;/a>
&lt;ul>
&lt;li>v2 &amp;gt; v4&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://github.com/peaceiris/actions-hugo">peaceiris/actions-hugo&lt;/a>
&lt;ul>
&lt;li>v2 &amp;gt; v3&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://github.com/peaceiris/actions-gh-pages">peaceiris/actions-gh-pages&lt;/a>
&lt;ul>
&lt;li>v3 &amp;gt; v4&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>あとはDeploy Keyの再設定&lt;br>
GitHub Pages 用のリポジトリに &lt;a href="https://docs.github.com/ja/authentication/connecting-to-github-with-ssh/managing-deploy-keys">Deploy keys&lt;/a> を登録して、Markdown ファイルを置くリポジトリに Repository secrets を設定する。&lt;/p>
&lt;ul>
&lt;li>WhaleMountain.github.io
&lt;ul>
&lt;li>&lt;code>Settings &amp;gt; Deploy kyes&lt;/code> に公開鍵を登録&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>whalem
&lt;ul>
&lt;li>&lt;code>Settings &amp;gt; Secrets and variables &amp;gt; Repository secrets&lt;/code> に秘密鍵を登録&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>鍵は 1Password で管理。あとはブログ更新しなくなったら Deploy keys の登録を削除する。&lt;/p></description></item><item><title>ラズパイで動かしていたWikiをGitHub Pagesに移行した</title><link>https://whalem.net/post/2021-05/migrating-mywiki-to-github-pages/</link><pubDate>Sun, 30 May 2021 18:54:00 +0900</pubDate><guid>https://whalem.net/post/2021-05/migrating-mywiki-to-github-pages/</guid><description>&lt;h4 id="移行">移行&lt;/h4>
&lt;p>ラズパイの&lt;code>Docker&lt;/code>で自分用のWikiを動かしていたが、GitHub Pagesの誘惑に負けたので移行する。&lt;br>
GitHub Pagesの公開用のリポジトリと、ソース用のリポジトリを分けて作成しているが、個人的にこの構成が好きだからで、特に深い意味はありません。&lt;/p>
&lt;h4 id="手順">手順&lt;/h4>
&lt;ol>
&lt;li>&lt;strong>Username.github.io&lt;/strong> のリポジトリを作成する&lt;/li>
&lt;li>上で作成したリポジトリに&lt;a href="https://docs.github.com/ja/developers/overview/managing-deploy-keys#%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%82%AD%E3%83%BC">Deploy Key&lt;/a>を設定する&lt;/li>
&lt;li>次にHugoなどの &lt;strong>.md&lt;/strong> ファイルを置くリポジトリを作成する&lt;/li>
&lt;li>1で作成したリポジトリにPushするために&lt;a href="https://docs.github.com/ja/actions/reference/encrypted-secrets#%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E6%9A%97%E5%8F%B7%E5%8C%96%E3%81%95%E3%82%8C%E3%81%9F%E3%82%B7%E3%83%BC%E3%82%AF%E3%83%AC%E3%83%83%E3%83%88%E3%81%AE%E4%BD%9C%E6%88%90">Secret Key&lt;/a>を設定する&lt;/li>
&lt;li>GitHub Actionを設定し終了&lt;/li>
&lt;/ol>
&lt;p>※ 2, 4で設定したKeyはMacOS上で&lt;code>ssh-keygen&lt;/code>で作成したKeyを設定する。1には公開鍵(&lt;code>.pub&lt;/code>)、3には秘密鍵を設定する。&lt;/p>
&lt;h4 id="github-action">Github Action&lt;/h4>
&lt;p>Hugo公式の&lt;a href="https://gohugo.io/hosting-and-deployment/hosting-on-github/">Host on GitHub&lt;/a>を参考に作成する。&lt;/p>
&lt;pre>&lt;code>name: github pages

on:
 push:
 branches:
 - main # Set a branch to deploy
 paths:
 - 'pages/**'
 pull_request:

jobs:
 deploy:
 runs-on: ubuntu-20.04
 steps:
 - uses: actions/checkout@v2
 with:
 submodules: true # Fetch Hugo themes (true OR recursive)
 fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod

 - name: Setup Hugo
 uses: peaceiris/actions-hugo@v2
 with:
 hugo-version: 'latest'
 extended: true

 - name: Build
 run: hugo
 working-directory: ./pages

 - name: Deploy
 uses: peaceiris/actions-gh-pages@v3
 with: 
 external_repository: WhaleMountain/WhaleMountain.github.io
 publish_branch: main
 publish_dir: ./pages/public
 deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
 cname: whalem.net
&lt;/code>&lt;/pre>
&lt;p>&lt;code>paths&lt;/code>を設定することで、設定したパス(&lt;code>pages/**&lt;/code>)に変更があった場合にGitHub Actionが動くようになる。(参考: &lt;a href="https://docs.github.com/ja/actions/reference/workflow-syntax-for-github-actions">GitHub Actionsのワークフロー構文&lt;/a>)&lt;br>
また、ソース用のリポジトリに旧構成のバックアップがあるため、Build時にHugoのソースがあるディレクトリに&lt;code>working-directory&lt;/code>で移動する。&lt;/p></description></item></channel></rss>